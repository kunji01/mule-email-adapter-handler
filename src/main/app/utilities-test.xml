<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
	xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">
    <http:request-config name="variableHTTP_Request_Configuration" host="#[flowVars.utilitieshandlerhost]" port="#[flowVars.utilitieshandlerport]" doc:name="HTTP Request Configuration"/>

	<!-- Test cases -->
    <flow name="/utilities/email/exception/test">
        <http:listener config-ref="sharedHTTP_Listener" path="/utilities/email/exception/test" allowedMethods="GET" doc:name="/utilities/exception/test"/>
        <set-payload value="Kun Ji's test content as a payload." doc:name="Set test Payload"/>
        <scripting:transformer doc:name="throw exception">
            <scripting:script engine="JavaScript"><![CDATA[throw 'Throw a exception to test utilities-adapter VM \n';]]></scripting:script>
        </scripting:transformer>
        <catch-exception-strategy doc:name="Catch Exception Strategy">
            <set-property propertyName="appname" value="#[app.name]" doc:name="Property appname"/>
            <vm:outbound-endpoint exchange-pattern="one-way" path="/utilities/email/exception" doc:name="VM" connector-ref="utilitiesAdapter_VM"/>
            <set-payload value="#['You test /utilities/email/exception/test/vm \n&lt;br&gt; Exception throwed, check your email to find exception content too. \n' + exception]" doc:name="Set Payload"/>
        </catch-exception-strategy>
    </flow>
    <flow name="/utilities/properties/test">
        <http:listener config-ref="sharedHTTP_Listener" path="/utilities/properties/test" doc:name="/utilities/properties/test"/>
        <set-variable variableName="utilitieshandlerport" value="utilities.handler.http.port" doc:name="utilitieshandlerport"/>
        <set-variable variableName="utilitieshandlerhost" value="0.0.0.0" doc:name="utilitieshandlerhost"/>
        <set-variable variableName="utilitieshandlerhost" value="0.0.0.0" doc:name="utilitieshandlerhost"/>
        <http:request config-ref="variableHTTP_Request_Configuration" path="/utilities/email/message/test/http" method="PUT" doc:name="HTTP"/>
        <catch-exception-strategy doc:name="Catch Exception Strategy">
            <set-variable variableName="utilitieshandlerport" value="8081" doc:name="utilitieshandlerport"/>
            <set-variable variableName="utilitieshandlerhost" value="0.0.0.0" doc:name="Copy_of_utilitieshandlerhost"/>
        </catch-exception-strategy>
    </flow>
    <flow name="/utilities/email/message/test">
        <http:listener config-ref="sharedHTTP_Listener" path="/utilities/email/message/test" doc:name="HTTP"/>
        <!-- set-payload value="Remmeber adding the original flow name to content

context:serviceName = #[context:serviceName]

send message to email - test vm" doc:name="Set a message as the Payload"/ -->
        <vm:outbound-endpoint exchange-pattern="one-way" path="/utilities/email/message" doc:name="VM" connector-ref="utilitiesAdapter_VM"/>
    </flow>
    <flow name="/utilities/email/log/test">
        <http:listener config-ref="sharedHTTP_Listener" path="/utilities/email/log/test" doc:name="HTTP"/>
        <set-payload value="Test log payload to message email" doc:name="Set Payload"/>
        <vm:outbound-endpoint exchange-pattern="one-way" path="/utilities/email/log" doc:name="VM" connector-ref="utilitiesAdapter_VM"/>
    </flow>
    <flow name="/utilities/log/test">
        <http:listener config-ref="sharedHTTP_Listener" path="/utilities/log/test" doc:name="HTTP"/>
        <set-payload value="Test log payload" doc:name="Set a Payload"/>
        <vm:outbound-endpoint exchange-pattern="one-way" path="/utilities/log" doc:name="VM" connector-ref="utilitiesAdapter_VM"/>
    </flow>
    <flow name="/utilities/email/payload/test">
        <http:listener config-ref="sharedHTTP_Listener" path="/utilities/email/payload/test" doc:name="HTTP"/>
        <set-property propertyName="flowname" value="#[context:serviceName]" doc:name="Property flowname"/>
        <set-payload value="send payload to email - test

Remmeber adding the original flow name to content

context:serviceName = #[context:serviceName]" doc:name="Set Payload"/>
        <vm:outbound-endpoint exchange-pattern="one-way" path="/utilities/email/payload" connector-ref="utilitiesAdapter_VM" doc:name="VM"/>
    </flow>
    <flow name="/utilities/email/note/test">
        <http:listener config-ref="sharedHTTP_Listener" path="/utilities/email/note/test" doc:name="HTTP"/>
        <set-property propertyName="subject" value="Email subject test" doc:name="subject"/>
        <set-payload value="#['subject =' + message.outboundProperties.subject +'\n\n' + payload]" doc:name="Set Payload"/>
        <vm:outbound-endpoint exchange-pattern="one-way" path="/utilities/email/note" doc:name="VM" connector-ref="utilitiesAdapter_VM"/>
    </flow>
</mule>
